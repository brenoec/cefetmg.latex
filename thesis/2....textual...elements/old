
% Metodologia
%

\chapter{Metodologia}
\label{chap:Methodoly}

A metodologia deste trabalho consiste na proposição e implementação de um modelo
da estrutura da execução de sistemas de software através de redes hierárquicas,
heterogêneas e navegáveis em múltiplas escalas, com ligações e componentes
topológicos.

\section{Modelo Proposto}
\label{sec:PropusedModel}

O modelo proposto visa representar a estrutura de execução de sistemas de
software através de uma rede --- onde os elementos são componentes desses
sistemas e ligações são relações entre tais componentes.

Os conceitos de componente e ligação aqui definidos são abstratos, uma vez que a
proposta é agnóstica às linguagens de programação. Se tratarmos de sistemas
orientados a objetos, as entidades básicas da rede serão métodos; se avaliarmos
sistemas funcionais, funções. Outros cenários também são compatíveis com essa
abordagem: em JavaScript, por exemplo, funções são consideradas métodos, caso
definidas como propriedades de um objeto. Neste caso um componente básico ora é
função, ora é método. 

As ligações representam relações onde, dado um componente originário $a$ e um
componente destinatário $b$, estabelecemos que $a$ executa $b$. A natureza de
uma ligação pode ser debatida e considerada a depender do contexto. Quando se
tratar de sistemas orientados a objetos, a ligação pode se dar por herança ou
interface; por exemplo.

\section{Construção do Modelo}
\label{subsec:DataAquisition}

A construção do modelo se dá pela redução espacial e temporal de trilhas de
execução. Se considerarmos um componente como uma localidade da estrutura de
execução do sistema, podemos definir o operador de redução espacial
$\mathcal{S}$ como uma transformação em uma trilha que unifica diferentes
ocorrências de um mesmo componente. Se considerarmos um conjunto qualquer de
trilhas de execução, o operador de redução temporal $\mathcal{T}$ é a agregação
dessas trilhas, reduzidas espacialmente ou não, em uma única estrutura, o que o
caracteriza como um operador de união.

Seja $\dot{X} = \{ \dot{x_1}, \dot{x_2}, \dot{x_3}, \dots, \dot{x_n} \}$ um
conjunto de $n$ trilhas de execução. Definimos $X = \{ x_1, x_2, x_3, \dots, x_n \}$,
donde $x_i = \mathcal{S}(\dot{x_i})$ e $X = \mathcal{S}(\dot{X})$, como conjunto
de $n$ trilhas de execução reduzidas espacialmente. Vale destacar que elementos
de $\dot{X}$ são árvores, enquanto que elementos de $X$ são grafos.
Mapa $\mathcal{M}$ da estrutura de execução de determinado sistema de software
pode ser obtido por

\begin{equation}
	\mathcal{M} = \mathcal{T}(\mathcal{S}(\dot{X})) = \bigcup\limits_{i=1}^{n} \mathcal{S}(\dot{x_i}).
\end{equation}

Os pseudo-códigos referentes aos operadores $\mathcal{S}$ e $\mathcal{T}$
constam nos Algoritmos \ref{Algorithm:SpatialReduction} e
\ref{Algorithm:TemporalReduction}, respectivamente. A expressão
\texttt{para cada} no Algoritmo \ref{Algorithm:SpatialReduction} corresponde a
percorrer todos os nós de uma árvore que representa uma trilha de execução.

\input{./7....algorithms/4.01....spatial...reduction}
\input{./7....algorithms/4.02....temporal...reduction}

%Para exemplificar a aplicação de tais operadores, utilizaremos o Algoritmo 
%\ref{Algorithm:ExampleAlgorithm} e as trilhas de execução ilustradas na Figura
%\ref{Figure:ExampleAlgorithmTraces}.
%
%\input{./7....algorithms/4.03....example...algorithm}
%
%\begin{figure}[!htb]
%    \centering
%    \caption{Relações entre as áreas do conhecimento e o trabalho da dissertação}
%    \includegraphics[scale=1.2]{../shared files/figures/2.04....methodology/example algorithm execution traces/main.pdf}
%    \fonte{do autor, 2017}
%    \label{Figure:ExampleAlgorithmTraces}
%\end{figure}
%
%A aplicação do operador de redução espacial $\mathcal{S}$ na trilhas de execução
%ilustradas na Figura \ref{Figure:ExampleAlgorithmTraces} resulta em grafos
%(Figura \ref{Figure:ExampleAlgorithmSpatialReduction}). A aplicação do operador
%de redução temporal $\mathcal{T}$ sobre tais grafos produz mapa $\mathcal{M}$ da
%estrutura de execução do Algoritmo \ref{Algorithm:ExampleAlgorithm} (Figura 
%\ref{Figure:ExampleAlgorithmTemporalReduction}).
%
%\begin{figure}[!htb]
%    \centering
%    \caption{Relações entre as áreas do conhecimento e o trabalho da dissertação}
%    \includegraphics[scale=1.2]{../shared files/figures/2.04....methodology/example algorithm spatial reduction/main.pdf}
%    \fonte{do autor, 2017}
%    \label{Figure:ExampleAlgorithmSpatialReduction}
%\end{figure}
%
%
%\begin{figure}[!htb]
%    \centering
%    \caption{Relações entre as áreas do conhecimento e o trabalho da dissertação}
%    \includegraphics[scale=1.2]{../shared files/figures/2.04....methodology/example algorithm temporal reduction/main.pdf}
%    \fonte{do autor, 2017}
%    \label{Figure:ExampleAlgorithmTemporalReduction}
%\end{figure}

$\mathcal{M}$ é apenas uma rede de componentes elementares.
Diferentes abordagens podem ser adotadas para caracterizar relações hierárquicas
entre componentes, além de permitir heterogeneidade e navegação em múltiplas
escalas. Esta dissertação propõe um método para inserir ligações e componentes
topológicos, determinar o nível hierárquico de todos os elementos e a força das
relações entre eles.

\section{Caracterização do Modelo}
\label{subsec:ModelCharacterization}

A caracterização de relações hierárquicas nas redes se darão pela inserção de
ligações e componentes topológicos, ambos valorados. Exempls de elementos
topológicos são componentes que representam um arquivo, pasta, pacote ou módulo;
de modo que as relações agora incorporam significados tais quais: define,
contém, usa, entre outros.

Atribuímos tipicamente aos componentes elementares o índice $i_e = 1$. Para
componetes topológicos, quão maior o nível de abstração, maior seu índice.
Utilizaremos o método em que atribuímos o índice de um componente topológico em
maior nível de hierárquico como a soma dos índices dos componentes em que ele se
conecta. Outra possibilidade é utilizar a sequência ordinal para $n$ classes
hierárquicas, onde o índice de um componente qualquer é o i-\textit{ésimo}
elemento do conjunto $\{1,2,\dots,n\}$, de acordo com a sua posição na
sequência.

O valor $v$ de determinado componente depende de seu índice $i$, função de
índice $f$ e de uma série exponencial $S$

\begin{equation}
	\label{Equation:WeightVertex1}
	v(i) = \alpha_1 \cdot S_{f(i)},
\end{equation}

\noindent
onde $\alpha$ é parâmetro de ajuste. Nesta dissertação adotaremos a série de
Fibonacci $F$ definida como

\begin{empheq}[left=\empheqlbrace]{equation}
\begin{split}
	\quad F_0 &= 0, \\
	\quad F_1 &= 1, \\
	\quad F_n &= F_{n-1} + F_{n-2}, \qquad n > 1
\end{split}
\end{empheq}

\noindent
e função de índice $f$ definida como

\begin{equation}
	\label{Equation:IndexFunction1}
	f(i) = i + 2,
\end{equation}

\noindent
de modo que a Equação \ref{Equation:WeightVertex1} é expressa como

\begin{equation}
	\label{Equation:WeightVertex2}
	v(i) = \alpha_1 \cdot F_{i+2}.
\end{equation}

Note que a função de índice expressa pela Equação \ref{Equation:IndexFunction1}
nos permite desconsiderar os dois primeiros elementos da série de Fibonacci
$\{0, 1, 1, 2, 3, 5, 8, 13, \dots \}$ --- o elemento 0 e o primeiro elemento 1 ---
com o propósito de não representar um componete com valor 0 e de não representar
componentes em diferentes níveis hierárquicos com o mesmo valor 1.

A abordagem para valorar as lilgações da rede é bastante similar. Dado um
componente originário $a$ e um componente destinatário $b$, com os respectivos
índices $i_a$ e $i_b$, uma possibilidade é determinar o valor $e$ de uma
ligação por

\begin{equation}
	\label{Equation:WeightEdge1}
	e(i_a) = \frac{1}{\alpha_3 \cdot F_{i_a+2}},
\end{equation}

\noindent
de modo que quão maior o índice de um componente, menor o valor de sua ligação.
Podemos alterar a Equação \ref{Equation:WeightEdge1} para atenuar relações entre
componentes com índices distintos

\begin{equation}
	\label{Equation:WeightEdge2}
	e(i_a, i_b) = \frac{1}{1 + \alpha_2 \cdot d(F_{i_a+2}, F_{i_b+2})} \cdot \frac{1}{\alpha_3 \cdot F_{i_a+2}},
\end{equation}

\noindent
onde $d(F_{i_a+2}, F_{i_b+2})$ é a distância euclidiana entre $F_{i_a+2}$ e 
$F_{i_b+2}$

\begin{equation}
	\label{Equation:EuclidianDistance}
	d(i_a, i_b) = \sqrt{(F_{i_a+2} - F_{i_b+2})^2} = \lvert F_{i_a+2} - F_{i_b+2} \rvert.
\end{equation}

Tal termo atenuante é inserido com finalidade de valorizar relações entre
componentes semelhantes que pertencem a classes hierárquicas próximas ou
idênticas. Se substituirmos a Equação \ref{Equation:EuclidianDistance} na
Equação \ref{Equation:WeightEdge2}, obtemos

\begin{equation}
	\label{Equation:WeightEdge3}
	e(i_a, i_b) = \frac{1}{1 + \alpha_2 \cdot \lvert F_{i_a+2} - F_{i_b+2} \rvert} \cdot \frac{1}{\alpha_3 \cdot F_{i_a+2}}.
\end{equation}

Os parâmetros $\alpha_1$, $\alpha_2$ e $\alpha_3$, que aparecem nas equações
\ref{Equation:WeightVertex2} e \ref{Equation:WeightEdge3}, obdecem às seguintes
restrições:

\begin{empheq}[left=\empheqlbrace]{equation}
\begin{split}
	\quad \alpha_1 > 0, \\
	\quad \alpha_2 > 0, \\
	\quad \alpha_3 \geq 1.
\end{split}
\end{empheq}

É necessário que $\alpha_1$ seja definido positivo, uma vez que o valor $v$
atribuído a um componente qualquer é definido positivo. De forma similar,
$\alpha_2$ é definido positivo, para que se mantenha o termo atenuante como tal.
Por fim, $\alpha_3$ precisa respeitar sua restrição para que valores atribuídos
às arestas estejam no intervalo $[0, 1]$.

$\mathcal{M}$ é uam rede definida por um conjunto de vértices valorados $V$ e um
conjunto de arestas valoradas $E$. $E$ pode ser representado por uma matriz,
tipicamente assimétrica, cujos valores se encontram no intervalo $[0, 1]$.
Tal rede possui ligações e componentes topológicos em diferentes níveis
hierárquicos. Ademais, suas ligações são ponderadas de acordo com a força da
relação dos componentes conectados e seus componentes ponderados de acordo com
sua posição hierárquica. Ainda se faz necessário definir as operações sobre
$\mathcal{M}$.


%\noindent
%\textbf{TODO: Exemplos de inserção de ligações e componentes topológicos.}
%
%\noindent
%\textbf{TODO: Exemplos de valoração de vértices e arestas.}

\section{Operações sobre o Modelo}
\label{subsec:ModelOperations}

Uma das operações que se definine sobre $\mathcal{M}$ é o agrupamento de
componentes elementares, cujo valor $v$ é a soma dos componentes que ele agrega.
O componente grupo mantém todas as ligações dos componentes elementares. Se faz
necessário revalorar suas ligações, uma vez que o índice do grupo não
corresponde ao índice utilizado para o cálculo 

%\noindent
%\textbf{TODO: Pseudo-código para agrupamento.}
%
%\noindent
%\textbf{TODO: Exemplo de agrupamento.}

% ocultação

%\noindent
%\textbf{TODO: Exemplo de ocultação.}

\section{Renderização do Modelo}
\label{subsec:ModelOperations}

% área dos componentes
% simulação física

\section{Análises sobre o Modelo}
\label{subsec:ModelOperations}

%\section{Implementação do Modelo}
%\label{ModelImplementation}

%\subsection{Desafios Técnicos e Tecnológicos}
%\label{TechnicalChallenges}

%\subsection{Requisitos da Solução}
%\label{Requirements}
